#  Copyright 2019 U.C. Berkeley RISE Lab
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

FROM hydroproject/base:latest

MAINTAINER Vikram Sreekanti <vsreekanti@gmail.com> version: 0.1

ARG repo_org=hydro-project
ARG source_branch=master
ARG build_branch=docker-build

USER root

# Download latest version of the code from relevant repository & branch -- if
# none are specified, we use hydro-project/cloudburst by default. Install the KVS
# client from the Anna project.
WORKDIR $HYDRO_HOME/cloudburst
RUN git remote remove origin && git remote add origin https://github.com/$repo_org/cloudburst
RUN git fetch -p origin && git checkout -b $build_branch origin/$source_branch
RUN rm -rf /usr/lib/python3/dist-packages/yaml
RUN rm -rf /usr/lib/python3/dist-packages/PyYAML-*
RUN pip3 install -r requirements.txt
WORKDIR $HYDRO_HOME
RUN rm -rf anna
RUN git clone --recurse-submodules https://github.com/cw75/anna -b TopK
WORKDIR anna
RUN cd client/python && python3.6 setup.py install
WORKDIR /

# These installations are currently pipeline specific until we figure out a
# better way to do package management for Python.
RUN pip3 install tensorflow==1.12.0 tensorboard==1.12.2 scikit-image sortedcontainers

COPY start-cloudburst.sh /start-cloudburst.sh

RUN pip3 install pandas s3fs 

RUN touch a
RUN pip3 install --upgrade git+https://github.com/devin-petersohn/modin@engines/cloudburst_init

WORKDIR /
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
    && apt-get update
# Install gcc-9, zeroMQ (libzmq3-dev), python3, curl
RUN apt install -y sudo libassimp-dev libcurl4-openssl-dev libspdlog-dev libcurl4-openssl-dev libeigen3-dev ninja-build
        
#RUN apt install -y sudo build-essential subversion python3-dev \
#        libncurses5-dev libxml2-dev libedit-dev swig doxygen graphviz xz-utils \
#        gcc-9 g++ python3-pip curl libzmq3-dev git libc++-dev libc++abi-dev libassimp-dev \
#        autoconf automake libtool make unzip pkg-config wget libpq-dev openssl libffi-dev zlib1g-dev \
#        clang-5.0 lldb-5.0 libcurl4-openssl-dev libssl-dev clang++ libcurl4-openssl-dev libeigen3-dev ninja-build

# Install Cmake
RUN wget "https://cmake.org/files/v3.15/cmake-3.15.4-Linux-x86_64.tar.gz" && \
    tar xvzf cmake-3.15.4-Linux-x86_64.tar.gz && \
    mv cmake-3.15.4-Linux-x86_64 /usr/bin/cmake && \
    rm -rf /usr/bin/cmake/bin /usr/bin/cmake/doc /usr/bin/cmake/man /usr/bin/cmake/share &&\  
    mv -f /usr/bin/cmake/cmake-3.15.4-Linux-x86_64/* /usr/bin/cmake/ && \
    rm /cmake-3.15.4-Linux-x86_64.tar.gz

#Libccd 
WORKDIR /
RUN git clone https://github.com/UNC-Robotics/nigh.git && \
    git clone https://github.com/cw75/anna.git -b TopK && \
    git clone https://github.com/danfis/libccd.git 
WORKDIR /libccd
RUN mkdir build && cd build && \
    cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release .. && \
    make -j8 && make install
    
#Anna
WORKDIR /anna
RUN git submodule init && git submodule update
RUN bash scripts/build.sh -j4 -bRelease

WORKDIR /
RUN git clone https://github.com/flexible-collision-library/fcl.git && \
    cd fcl && mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && make -j8 && make install  
    
WORKDIR /
RUN git clone https://github.com/Debbieliang9/mplambda.git -b TopK
WORKDIR /mplambda
# RUN mkdir -p build/Debug && \
#     cd build/Debug && \
#     cmake -DCMAKE_BUILD_TYPE=Debug -DAPPLE=1 ../.. && \
#     make -j8
    
CMD bash start-cloudburst.sh
