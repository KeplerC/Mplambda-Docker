#  Copyright 2019 U.C. Berkeley RISE Lab
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

FROM ubuntu:18.04


# Hydrobase
MAINTAINER Vikram Sreekanti <vsreekanti@gmail.com> version: 0.1
USER root

ARG repo_org=hydro-project
ARG source_branch=master
ARG build_branch=docker-build

RUN apt-get update
RUN apt-get install -y build-essential autoconf automake libtool curl make \
      unzip pkg-config wget curl git vim jq software-properties-common \
      libzmq3-dev git gcc libpq-dev libssl-dev \
      openssl libffi-dev zlib1g-dev net-tools

# Install clang-5 and other related C++ things; this uses --force-yes because 
# of some odd disk space warning that I can't get rid of.
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - \
  && apt-add-repository "deb http://apt.llvm.org/buster/ llvm-toolchain-buster main" \
  && apt-get update \
  && apt-get install -y clang-9 lldb-9

# Update the default choice for clant to be clang-5.0.
RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 1
RUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-9 1
RUN apt-get install -y libc++-dev libc++abi-dev 


# Install Cmake
RUN wget "https://cmake.org/files/v3.15/cmake-3.15.4-Linux-x86_64.tar.gz" && \
    tar xvzf cmake-3.15.4-Linux-x86_64.tar.gz && \
    mv cmake-3.15.4-Linux-x86_64 /usr/bin/cmake && \
    rm /cmake-3.15.4-Linux-x86_64.tar.gz 
ENV PATH $PATH:/usr/bin/cmake/bin
RUN cmake --version 


# Install python3.6. We use a separate apt repository because Ubuntu 14.04 does
# not come with this version of Python3 enabled.
RUN apt-get update
RUN apt-get install -y python3-distutils
RUN apt-get install -y python3-pip


# Download protobuf 3.5.1.
RUN wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip
RUN unzip protobuf-all-3.5.1.zip 

# Build and install protobuf. NOTE: this step takes a really long time!
WORKDIR /protobuf-3.5.1/
RUN ./autogen.sh
RUN ./configure 
#CXX=clang++ CXXFLAGS='-std=c++11 -stdlib=libc++ -O3 -g'
RUN make -j4
RUN make check -j4
RUN make install
RUN ldconfig

# Clean up protobuf install files.
WORKDIR /
RUN rm -rf protobuf-3.5.1 protobuf-all-3.5.1.zip

WORKDIR /

WORKDIR /
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
    && apt-get update
# Install gcc-9, zeroMQ (libzmq3-dev), python3, curl
RUN apt install -y sudo libassimp-dev libcurl4-openssl-dev libspdlog-dev libcurl4-openssl-dev libeigen3-dev ninja-build

#Libccd 
WORKDIR /
RUN git clone https://github.com/UNC-Robotics/nigh.git && \
    git clone https://github.com/cw75/anna.git -b TopK && \
    git clone https://github.com/danfis/libccd.git 
WORKDIR /libccd
RUN mkdir build && cd build && \
    cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release .. && \
    make -j8 && make install
    
#Anna
WORKDIR /anna
RUN git submodule init && git submodule update
RUN bash scripts/build.sh -j4 -bRelease -g

WORKDIR /
RUN git clone https://github.com/flexible-collision-library/fcl.git && \
    cd fcl && mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && make -j8 && make install  
    
WORKDIR /
RUN git clone https://github.com/Debbieliang9/mplambda.git -b TopK
WORKDIR /mplambda
# RUN mkdir -p build/Debug && \
#     cd build/Debug && \
#     cmake -DCMAKE_BUILD_TYPE=Debug -DAPPLE=1 -DCMAKE_CXX_FLAGS="-fPIC" ../.. && \
#     make -j8
    
CMD bash start-cloudburst.sh
